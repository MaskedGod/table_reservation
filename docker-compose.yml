services:
  pg:
    container_name: postgres
    image: postgres:latest
    restart: unless-stopped
    environment:
      POSTGRES_DB: "${DB_NAME}"
      POSTGRES_USER: "${DB_USER}"
      POSTGRES_PASSWORD: "${DB_PASS}"
    expose:
      - ${DB_PORT}
    ports:
      - "${DB_PORT}:${DB_PORT}"
    volumes:
      - ./_data/pg/data:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_NAME} -p ${DB_PORT}" ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    networks:
      - app-network
  app:
    build: .
    ports:
      - "8000:8000"
    environment:
      DATABASE_URL: "postgresql://${DB_USER}:${DB_PASS}@pg:${DB_PORT}/${DB_NAME}"
    depends_on:
      pg:
        condition: service_healthy
    volumes:
      - ./_data/app:/app/data
    networks:
      - app-network

networks:
  app-network:
    driver: bridge
